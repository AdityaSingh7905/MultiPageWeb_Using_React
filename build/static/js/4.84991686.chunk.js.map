{"version":3,"sources":["components/hooks/use-http.js","components/lib/api.js","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","arguments","length","undefined","httpState","dispatch","useReducer","sendRequest","useCallback","async","requestData","message","FIREBASE_DOMAIN","getAllQuotes","response","fetch","concat","json","ok","Error","transformedQuotes","key","quoteObj","id","push","getSingleQuote","quoteId","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","QuoteItem","props","_jsxs","className","classes","item","children","_jsx","text","author","Link","to","QuoteList","navigate","useNavigate","location","useLocation","isSortedAscending","URLSearchParams","search","get","sortedQuotes","quotes","ascending","sort","quoteA","quoteB","sortQuotes","Fragment","sorting","onClick","changeSortHandler","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","LoadingSpinner"],"mappings":"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","file":"static/js/4.84991686.chunk.js","sourcesContent":["import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-b5b2d-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1qHLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2P87b\",\"sorting\":\"QuoteList_sorting__1_Zmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3gHWf\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  \n\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">View Fullscreen</Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  // console.log(location);\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortedAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortedAscending);\n\n  const changeSortHandler = () => {\n    navigate('?sort=' + (isSortedAscending ? 'desc' : 'asc'));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          Sort {isSortedAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getAllQuotes } from \"../components/lib/api\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data : loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest])\r\n\r\n  if(status === 'pending'){\r\n    return <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  }\r\n  if(error){\r\n    return <div className=\"centered focused\">{error}</div>\r\n  }\r\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n    return <NoQuotesFound />\r\n  }\r\n  \r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}